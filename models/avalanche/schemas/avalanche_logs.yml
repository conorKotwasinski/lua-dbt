version: 2

models:
  - name: avalanche_logs
    config:
      alias: logs
    description: >
      Logs are a cheap way to store data on-chain.
      An example is using logs to store historical data that can be rendered by a frontend.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - transaction_hash
            - log_index
          where: "block_timestamp between (today() - 1) and date_sub(hour, 2, now())"
    columns:
      - name: block_number
        description: "The length of the blockchain (count of blocks)"
        tests:
          - not_null

      - name: block_timestamp
        description: "The timestamp when the block was mined (UTC)"
        tests:
          - not_null

      - name: block_hash
        description: "A unique identifier for the block"
        tests:
          - not_null

      - name: transaction_hash
        description: >
          With the signature hash, the transaction can be cryptographically proven that it came from the sender 
          and submitted to the network.
        tests:
          - not_null

      - name: transaction_index
        description: "Index of this transaction within the block"
        tests:
          - not_null

      - name: log_index
        description: "Integer of the event index position in the block"
        tests:
          - not_null

      - name: address
        description: "Address this event originated from"

      - name: data
        description: "The data containing non-indexed log parameter"

      - name: topic1
        description: "Topic 1-3 contains indexed parameters of the log"

      - name: topic2
        description: "Topic 1-3 contains indexed parameters of the log"

      - name: topic3
        description: "Topic 1-3 contains indexed parameters of the log"

      - name: topic4
        description: "Topic 1-3 contains indexed parameters of the log"
