version: 2

models:
  - name: avalanche_blocks
    config:
      alias: blocks
    description: Blocks are batches of transactions with a hash of the previous block in the chain.
    columns:
      - name: number
        description: The length of the blockchain (count of blocks)
        tests:
          - unique
          - not_null
      - name: timestamp
        description: The time when the block was mined
        tests:
          - not_null
      - name: hash
        description: A unique identifier for the block
        tests:
          - unique
          - not_null
      - name: parent_hash
        description: The hash of the parent (prior) block
      - name: nonce
        description: The nonce used to mine the block
      - name: sha3_uncles
        description: A sibling block of the parent block
      - name: logs_bloom
        description: The bloom filter for the logs in the block
      - name: transactions_root
        description: The root hash of the Merkle tree of all the transactions in the block (32 byte string)
      - name: state_root
        description: The root of the state trie at the end of the block
      - name: receipts_root
        description: The hash of the root node of the trie that contains the receipts of all transactions listed in this block
      - name: miner
        description: The address of the miner who mined the block
      - name: difficulty
        description: The effort required to mine the block
      - name: total_difficulty
        description: Cumulative difficulty of all blocks until the current block
      - name: size
        description: Size of block in bytes
      - name: extra_data
        description: An optional 32-byte space to store extra data
      - name: gas_limit
        description: The amount of gas used by the block
      - name: gas_used
        description: The gas limit allowed in the block
      - name: transaction_count
        description: Number of transactions in the block
      - name: base_fee_per_gas
        description: The base fee for this block (see EIP-1559)

  - name: avalanche_contracts
    config:
      alias: contracts

  - name: avalanche_logs
    config:
      alias: logs
    description: >
      Logs are a cheap way to store data on-chain.
      An example is using logs to store historical data that can be rendered by a frontend.
    columns:
      - name: block_number
        description: The length of the blockchain (count of blocks)
        tests:
          - not_null
      - name: block_timestamp
        description: The time when the block was mined
        tests:
          - not_null
      - name: block_hash
        description: A unique identifier for the block
        tests:
          - not_null
      - name: transaction_hash
        description: >
          With the signature hash, the transaction can be cryptographically proven that it came from the sender 
          and submitted to the network.
        tests:
          - not_null
      - name: transaction_index
        description: Index of this transaction within the block
        tests:
          - not_null
      - name: log_index
        description: Integer of the event index position in the block
        tests:
          - not_null
      - name: address
        description: Address this event originated from
        tests:
          - not_null
      - name: data
        description: The data containing non-indexed log parameter
      - name: topic1
        description: Topic 1-3 contains indexed parameters of the log
      - name: topic2
        description: Topic 1-3 contains indexed parameters of the log
      - name: topic3
        description: Topic 1-3 contains indexed parameters of the log
      - name: topic4
        description: Topic 1-3 contains indexed parameters of the log

  - name: avalanche_token_transfers
    config:
      alias: token_transfers

  - name: avalanche_tokens
    config:
      alias: tokens

  - name: avalanche_traces
    config:
      alias: traces

  - name: avalanche_transactions
    config:
      alias: transactions
    description: >
      Transactions are cryptographically signed instructions from accounts.
      An account will initiate a transaction to update the state of the network.
    columns:
      - name: block_number
        description: The length of the blockchain (count of blocks)
        tests:
          - not_null
      - name: block_timestamp
        description: The time when the block was mined
        tests:
          - not_null
      - name: block_hash
        description: A unique identifier for the block
        tests:
          - not_null
      - name: hash
        description: >
          With the signature hash, the transaction can be cryptographically proven that it came from the sender 
          and submitted to the network.
        tests:
          - unique
          - not_null
      - name: nonce
        description: The nonce is used to ensure that each transaction is unique.
        tests:
          - not_null
      - name: transaction_index
        description: Index of this transaction within the block
        tests:
          - not_null
      - name: from_address
        description: The sending address
        tests:
          - not_null
      - name: to_address
        description: The receiving address
      - name: value
        description: The amount transferred from sender to recipient
      - name: gas
        description: The fee required to conduct a transaction
      - name: gas_price
        description: Gas price per unit.
      - name: input
      - name: receipt_root
      - name: receipt_status
      - name: receipt_gas_used
      - name: receipt_cumulative_gas_used
      - name: receipt_effective_gas_price
      - name: receipt_contract_address
      - name: max_fee_per_gas
        description: Maximum limit user is willing to pay for their transaction to be executed.
      - name: max_priority_fee_per_gas
        description: A fee (tip) to incentivize miners to include a transaction in the block.
      - name: transaction_type
        description: 0 = Legacy, 1 = Access List, 2 = Dynamic Fee
