name: dbt build

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - reopened
      - edited
      - synchronize
  push:
    branches:
      - main

env:
  DBT_PROFILES_DIR: .

jobs:
  run_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - id: auth
        name: gCloud Auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ secrets.gcp_credentials }}'
      - id: secrets
        name: Get secrets
        uses: google-github-actions/get-secretmanager-secrets@v0
        with:
          secrets: |-
            ch_password:projects/1080090551637/secrets/CH_ADMIN_PASSWORD
            psql_uri:projects/1080090551637/secrets/SUPABASE_SQLALCHEMY_DATABASE_URI
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: '1.1.13'
      - name: Poetry install
        run: poetry install --no-dev
      - name: dbt debug
        run: poetry run dbt debug
        env:
          CH_ADMIN_PASSWORD: '${{ steps.secrets.outputs.ch_password }}'
      - name: dbt deps
        run: poetry run dbt deps
        env:
          CH_ADMIN_PASSWORD: '${{ steps.secrets.outputs.ch_password }}'
      - name: dbt build
        if: github.ref != 'refs/heads/main' && github.event_name == 'pull_request'
        run: poetry run dbt build
        env:
          CH_ADMIN_PASSWORD: '${{ steps.secrets.outputs.ch_password }}'
      - name: dbt build
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        run: poetry run dbt build -t prod
        env:
          CH_ADMIN_PASSWORD: '${{ steps.secrets.outputs.ch_password }}'
      - name: Update Postgres
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        run: |
          poetry run python updateLuaSchema.py
        env:
          CH_ADMIN_PASSWORD: '${{ steps.secrets.outputs.ch_password }}'
          SUPABASE_SQLALCHEMY_DATABASE_URI: '${{ steps.secrets.outputs.psql_uri }}'
